buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id "fabric-loom" version "0.12-SNAPSHOT"
}
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "${mc_version}-1.2.2"
group = 'link.infra.demagnetize' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'demagnetize-forge'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
	maven {
		// location of the maven that hosts JEI files
		name = "Progwml6 maven"
		url = "https://dvs1.progwml6.com/files/maven/"
	}
	maven {
		// location of a maven mirror for JEI files, as a fallback
		name = "ModMaven"
		url = "https://modmaven.k-4u.nl"
	}
    maven {
        name = "BlameJared"
        url = "https://maven.blamejared.com"
    }
    maven {
        name = "IllusiveC4"
        url = "https://maven.theillusivec4.top/"
    }
    maven {
        name = "gigaherz"
        url = "https://www.dogforce-games.com/maven/"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.mc_version}"
    mappings loom.officialMojangMappings()

    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modApi "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}+${rootProject.mc_version}"

	/*// compile against the JEI API but do not include it at runtime //FIXME fabric we want REI now
	compileOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}:api")
	// at runtime, use the full JEI jar
	runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}")*/
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "Demagnetize",
            "Specification-Vendor": "comp500",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"comp500",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            if (project.hasProperty("github.token")) {
                url "https://maven.pkg.github.com/comp500/Demagnetize"
                credentials {
                    username "comp500"
                    password findProperty("github.token")
                }
            } else {
                url "file:///${project.projectDir}/mcmodsrepo"
            }
        }
    }
}